<?phpnamespace app\api\controller;use app\common\controller\IndexBase;class Appindex  extends IndexBase{    function version(){        $param=$this->request->param();        $android = model('appadmin')->order('id desc')->field( 'downurl,version,notes')->where(['platform'=>'android'])->limit(1)->select();        if($param['version']<$android[0]['version']){            $update_flag = 1;        }else{            $update_flag = 0;        }        if($android['type']=='wgt'){            $data = array(                "update_flag"=>$update_flag,                "update_url"=>'',                "forceupdate"=>0,                "wgt_flag"=>1,                "wgt_url"=>formatUrl($android[0]['downurl']),                "update_tips"=>$android[0]['notes'],                "version"=>$android[0]['version'],                "size"=>0            );        }else{            $data = array(                "update_flag"=>$update_flag,                "update_url"=>formatUrl($android[0]['downurl']),                "forceupdate"=>0,                "wgt_flag"=>0,                "wgt_url"=>"",                "update_tips"=>$android[0]['notes'],                "version"=>$android[0]['version'],                "size"=>0            );        }        model("appadmin")->where('version', $android[0]['version'])->setInc('downtime',1);        return json_encode(array("code"=>100,"msg"=>"","data"=>$data),JSON_UNESCAPED_SLASHES);    }    function siteInfo(){        $info['site_name']=config('website.site_name');        $info['site_description']=config('website.site_description');        $info['logoImg']=formatUrl(config('website.big_logo'));        $info['isvipopen']=config('isvipopen');        return  json_encode($info);    }    function addloginjifen(){        $param=$this->request->param();        $this->addjifen('login',$param['uid']);    }    function loadBanner(){        $slide = model('ad')->order('sort_order desc')->where(['category'=>'index','status'=>1])->select();        foreach ($slide as $k=> $value) {            $slide[$k]['img']=formatUrl($value['appimage']);        }        return  json_encode($slide);    }    function getIndexCourse(){        $videoCourse=db('videoCourse')->field(['id','title','price','picture','type'])->orderRaw('rand()')->limit(6)->where(['status'=>1,'is_top'=>1])->select();        foreach ($videoCourse as $k=> $value) {            $videoCourse[$k]['picture']=formatUrl($videoCourse[$k]['picture']);            $videoCourse[$k]['stuNum']=getUserNum($videoCourse[$k]['id'],1);        }        $liveCourse=db('liveCourse')->field(['id','title','price','picture','type'])->orderRaw('rand()')->limit(6)->where(['status'=>1,'is_top'=>1])->select();        foreach ($liveCourse as $k=> $value) {            $liveCourse[$k]['picture']=formatUrl($liveCourse[$k]['picture']);            $liveCourse[$k]['stuNum']=getUserNum($liveCourse[$k]['id'],2);;        }        $allCourse=array_merge($videoCourse,$liveCourse);        return  json_encode($allCourse);    }    function getPaperList(){        $exams=model('exams')->where(['isopen'=>1])->order('id',"desc")->limit(4)->select();        return  json_encode($exams);    }    function getTeacher(){        $teacher=model('admin')->field(['id','uid','showname','sign','brief'])->where('status',1)->orderRaw('rand()')->limit(2)->select();        foreach ($teacher as $k=> $value) {            $teacher[$k]['picture']=formatUrl(defaultAvatar(getAvatar($teacher[$k]['uid'])));            $teacher[$k]['brief']=strip_tags(removeImgHtml($teacher[$k]['brief']));        }        return  json_encode($teacher);    }    function search(){        $param=$this->request->param();        $key='%'.$param['key'].'%';        $videoCourse=model('videoCourse')->field(['id','title','price','picture','type','teacher_id'])->where('title','like',$key)->where(['status'=>1,'is_top'=>1])->select();        foreach ($videoCourse as $k=> $value) {            $videoCourse[$k]['picture']=$param['webUrl'].$videoCourse[$k]['picture'];            $videoCourse[$k]['stuNum']=getUserNum($videoCourse[$k]['id'],1);            $videoCourse[$k]['teacher'] =getTeacherName($videoCourse[$k]['teacher_id']);        }        $liveCourse=model('liveCourse')->field(['id','title','price','picture','type','teacher_id'])->where('title','like',$key)->where(['status'=>1,'is_top'=>1])->select();        foreach ($liveCourse as $k=> $value) {            $liveCourse[$k]['picture']=$param['webUrl'].$liveCourse[$k]['picture'];            $liveCourse[$k]['stuNum']=getUserNum($liveCourse[$k]['id'],2);            $liveCourse[$k]['teacher'] =getTeacherName($liveCourse[$k]['teacher_id']);        }        $allCourse=array_merge($videoCourse,$liveCourse);        return  json($allCourse);    }}